// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    VERSION = file("${rootDir}/version.txt").text
    androidToolsVersion = "3.1.0"
    androidSupportVersion = "27.1.1"
    kotlinVersion = "1.2.31"
    ankoVersion = "0.10.3"
    binTrayKey = System.getenv("BINTRAY_API_KEY") ?: ""
  
    /**
     * Publish all local
     */
  
    publishProjects = [
        "kdux-android",
        "kdux-core"
    ]
  }
  
  repositories {
    google()
    jcenter()
    mavenCentral()
  }
  
  dependencies {
    classpath 'com.android.tools.build:gradle:3.1.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
  
  }
}

/**
 * Publish install all
 */
task publishAllLocal() {
  doLast {
    println("All published")
  }
}

task installAllLocal() {
  doLast {
    println("All installed")
  }
}

task installLocal() {
  dependsOn publishAllLocal, installAllLocal
}



/**
 * Configure all projects
 */
allprojects {currentProject ->
  
  // SET VERSION
  currentProject.version = VERSION
  
  buildscript {
    ext {
      arrowVersion        = "0.6.1"
      slf4jVersion        = "1.7.25"
      kotlinPoetVersion   = "0.7.0"
      googleAutoVersion   = "1.0-rc4"
      junitVersion        = "4.12"
      
      SOURCE_VERSION      = "1.8"
      MIN_SDK_VERSION     = 24
      TARGET_SDK_VERSION  = 27
      COMPILE_SDK_VERSION = 27
    }
  }
 
  // PLUGINS
  apply plugin: 'idea'
  
  
  // IF NOT APP THEN APPLY
  if (!["example-app","kdux-android"].contains(currentProject.name)) {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    
    sourceCompatibility = SOURCE_VERSION
    targetCompatibility = SOURCE_VERSION
    
  } else if (currentProject.name == "kdux-android") {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
  } else {
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
  }
  
  // KOTLIN
  kotlin {
    experimental { coroutines 'enable' }
  }
  
  
  // PUBLISHING
  if (publishProjects.contains(currentProject.name)) {
    apply plugin: 'com.jfrog.bintray'
    
    bintray {
      user = 'jonglanz'
      key = binTrayKey
      publications = ['mavenJava']
      pkg {
        repo = 'oss'
        name = currentProject.name
        userOrg = 'densebrain'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/jglanz/kdux.git'
        version {
          name = VERSION
          released = new Date()
        }
      }
    }
  
    publishAllLocal.dependsOn(publishToMavenLocal)
    installAllLocal.dependsOn(install)
  }
  
  // REPOS
  repositories {
    google()
    jcenter()
    mavenCentral()
    maven {
      url "http://dl.bintray.com/kotlin/kotlinx"
    }
  }

  dependencies {
    implementation(
        "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
        "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
        "io.arrow-kt:arrow-core:${arrowVersion}",
        "io.arrow-kt:arrow-typeclasses:${arrowVersion}",
        "io.arrow-kt:arrow-instances:${arrowVersion}",
        "io.arrow-kt:arrow-data:${arrowVersion}",
        "io.arrow-kt:arrow-syntax:${arrowVersion}",
        "io.arrow-kt:arrow-effects-kotlinx-coroutines:${arrowVersion}",
        "org.slf4j:slf4j-api:${slf4jVersion}"
    )
  
    testImplementation("junit:junit:${junitVersion}")
  }
}


